spring:
  application:
    name: funding_project

  #DB connection for production
#  datasource:
#    driver-class-name: org.mariadb.jdbc.Driver
#    url: jdbc:mariadb://almagest-auth-server-db.c6xfdqe0sq9a.ap-northeast-2.rds.amazonaws.com:3306/funding_db
#    username: ${DB_USERNAME}
#    password: ${DB_PASSWORD}


  #local test
  datasource:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://localhost:3306/funding_db
      username: root
      password: 1234


  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8

  sql:
    init:
      mode: always # h2같은 임베디드 데이터베이스 외 mysql같은 db에 data.sql로 초기화 하기 위함

  jpa:
    hibernate:
      ddl-auto: create
    defer-datasource-initialization: true # data.sql으로 스프링부트실행시 데이터삽입
#    show-sql: true
#    properties:
#      hibernate:
#        format_sql: true

  #Swagger 3.0 for SpringBoot 3.x
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher # SpringBoot 2.x 이전의 url경로 매칭방법. 3.x는 PathPatternParser 방식

  #Redis
  data:
    redis:
#      host: redis
      host: localhost
      port: 6379

#Swagger 3.0
#서버 실행 후 조회 경로
#http://localhost:9091/swagger-ui/index.html
  html:
springdoc:
  swagger-ui:
    path: /api-docs
  api-docs:
    path: /v3/api-docs
    enabled: true # open-api 공개설정

application:
  security:
    jwt:
      sensitive-key : awefawef
      secret-key: awef
      private-key : awef
      expiration: 6000000 # 100 mins
auth:
  server:
    url: https://almagest-auth.com

server:
  port: 9091